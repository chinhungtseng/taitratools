industry_type <- "industry21"
tmp_data <- tt_bind_industry(tmp_data, sub = sub, col_more = TRUE, industry_type = industry_type, verbose = verbose)
tmp_data
tt_grouped_sum(tmp_data, type, major, minor, industry, country, year)
tmp_data <- tt_grouped_sum(tmp_data, type, major, minor, industry, country, year)
list(
industry_type = industry_type,
data = tmp_data
)
load_all()
x
x %>% tt_industry_grouped_sum()
document()
load_all()
check()
# TODO Adding some common
getsourcepath <- function() {
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
save(.tt_source_path, file = "R/sysdata.rda", compress='xz')
}
tt_update_data <- function() {
# tt_source_path data -------------------------
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
# industry data -----------------------------
.industry_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY")) %>%
dplyr::mutate_at(dplyr::vars("reports_version_industry21", "reports_version_1", "reports_version_2"), list(~ tidyr::replace_na(., 0)))
.industry_tbl_en <- rlang::set_names(.industry_tbl, c("index", "type", "major", "minor", "hscode6", "hscode11", "hscode_dights",
"hscode", "industry", "reports_version_1", "reports_version_1_order", "reports_version_2",
"reports_version_2_order", "reports_version_2_ind_name", "reports_version_industry21", "reports_version_industry21_order"))
# industry21 data -----------------------------
.tt_ind21_list <- .industry_tbl[.industry_tbl[["reports_version_industry21"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind21_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind21_list, ][c("\u7DE8\u865F", "industry", "reports_version_industry21_order")]
.tt_ind21_tbl_en <- .industry_tbl_en[.industry_tbl_en[["index"]] %in% .tt_ind21_list, ][c("index", "industry", "reports_version_industry21_order")]
# industry version 1 data -----------------------------
.tt_ind_list_verion_1 <- .industry_tbl[.industry_tbl[["reports_version_1"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind_verion_1_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind_list_verion_1, ][c("\u7DE8\u865F", "industry", "reports_version_1_order")]
.tt_ind_verion_1_tbl_en <- .industry_tbl_en[.industry_tbl_en[["index"]] %in% .tt_ind_list_verion_1, ][c("index", "industry", "reports_version_1_order")]
# industry version 2 data -----------------------------
.tt_ind_list_verion_2 <- .industry_tbl[.industry_tbl[["reports_version_2"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind_verion_2_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind_list_verion_2, ][c("\u7DE8\u865F", "industry", "reports_version_2_order")]
.tt_ind_verion_2_tbl_en <- .industry_tbl_en[.industry_tbl_en[["index"]] %in% .tt_ind_list_verion_2, ][c("index", "industry", "reports_version_2_order")]
# full hsocde data -----------------------------
.full_hscode_tbl <- tt_read_table(tt_get_path("PATH_FULL_HSCODE"))
tmp <- lapply(list(1:2, 3:4, 5:6, 7:8, 9:10), function(x) {
tmp <- unique(.full_hscode_tbl[x])
names(tmp) <- c("hscode", "hscode_cn")
tmp
})
.full_hscode_tbl <- Reduce(rbind, tmp)
# area data -------------------------------------
.area_tbl <- tt_read_table(tt_get_path("PATH_AREA"))
.area_tbl[.area_tbl$areaName == "全球", ][["countryName"]] <- "[\\w\\W]+"
# country name data -----------------------------
.country_ref_list <- readxl::read_xlsx("//172.26.1.102/dstore/重要資料/國家中英文對照.xlsx", skip = 1)
name_var <- c(
"name_ch",                                         # chinese name
paste0("mof.",         c("name", "code", "area")), # MOF
paste0("itc.",         c("name", "code")),         # ITC
paste0("world_bank.",  c("name", "code", "area")), # WORLD BANK
paste0("imf.",         c("name")),                 # IMF
paste0("oxford.",      c("name")),                 # OXFORD
paste0("un_comtrade.", c("name", "code", "iso")),  # UN COMTRADE
paste0("gta.",         c("name")),                 # GTA
paste0("itc_tariff.",  c("name")),                 # ITC TARIFF
paste0("asean.",       c("name", "code")),         # ASEAN
"name_ch2"                                         # same as name_ch
)
names(.country_ref_list) <- name_var
.mof_export_usd_sample_data <- tt_vroom_mof("2019-01", "2019-02", period = 3, dep_month_cols = TRUE)
# save data ------------------------------------
save(
.tt_source_path, .industry_tbl, .industry_tbl_en,
.tt_ind21_tbl, .tt_ind21_tbl_en, .tt_ind21_list,
.tt_ind_verion_1_tbl_en, .tt_ind_list_verion_1,
.tt_ind_verion_2_tbl_en, .tt_ind_list_verion_2,
.full_hscode_tbl, .area_tbl, .country_ref_list,
.mof_export_usd_sample_data,
file = "R/sysdata.rda", compress='xz')
}
getsourcepath()
tt_update_data()
install()
document()
install()
build()
load_all()
test_data <- rpt_mof_export_top_n_product("2019-01", "2019-02")
test_data
View(test_data$data)
test_data <- rpt_mof_export_top_n_product("2019-01", "2019-02", industry_type = "industry21")
View(test_data$data)
contains
load_all()
test_data <- rpt_mof_export_top_n_product("2019-01", "2019-02", industry_type = "industry21")
View(test_data$data)
readr::write_excel_csv(test_data$data, "C:/Users/k484/Desktop/tmp/test.csv")
test_data <- rpt_mof_export_top_n_product("2019-01", "2019-11", industry_type = "industry21")
readr::write_excel_csv(test_data$data, "C:/Users/k484/Desktop/tmp/test.csv")
fun <- function(){
x <- readline("What is the value of x?")
y <- readline("What is the value of y?")
t <- readline("What are the T values?")
v <- readline("What are the V values?")
x <- as.numeric(unlist(strsplit(x, ",")))
y <- as.numeric(unlist(strsplit(y, ",")))
t <- as.numeric(unlist(strsplit(t, ",")))
v <- as.numeric(unlist(strsplit(v, ",")))
out1 <- x + y
out2 <- t + v
return(list(out1, out2))
}
fun()
fun <- function() {
start_date <- readline("開始日期(ex> \"2019-01\")? ")
end_date <- readline("結束日期(ex> \"2019-06\")? ")
period <- readline("幾年期複合成長率? ")
sub_hs_digits <- readline("hscode 碼數? ")
money <- readline("單位(usd/twd)? ")
industry_type <- readline("產業群組? (all_industry/industry21/versoin1/version2)? ")
country_list <- readline("特定國家? ")
destdir <- readline("輸出位置? ")
list(start_date, end_date, period, sub_hs_digits, money, industry_type, destdir)
}
fun
fun())
fun()
taitra_reports <- function() {
cat("test")
start_date    <- readline("開始日期(ex> \"2019-01\")? ")
end_date      <- readline("結束日期(ex> \"2019-06\")? ")
period        <- readline("幾年期複合成長率? ")
sub_hs_digits <- readline("hscode 碼數? ")
money         <- readline("單位(usd/twd)? ")
industry_type <- readline("產業群組? (all_industry/industry21/versoin1/version2)? ")
country_list  <- readline("特定國家? ")
destdir       <- readline("輸出位置? ")
list(start_date, end_date, period, sub_hs_digits, money, industry_type, destdir)
}
taitra_reports()
start_date <- "2019-01"
end_data <- "2019-03"
period = 3
sub_hs_digits = 8
n = 3
country_list <- NULL
monty = "usd"
industry_type = "all_industry"
verbose = TURE
verbose = TRUE
load_all()
stopifnot(validate_tt_read_mof(start_date, end_date, period, "export", money))
end_date
end_date <- "2019-03"
stopifnot(validate_tt_read_mof(start_date, end_date, period, "export", money))
money <- "usd"
stopifnot(validate_tt_read_mof(start_date, end_date, period, "export", money))
destdir <- NULL
stopifnot(check_industry_type(industry_type))
date_info <- tt_parse_date(start_date, end_date, period)
date_info
mof_rawdata <- tt_vroom_mof(start_date, end_date, period = period, money = money, dep_month_cols = TRUE)
mof_data_with_ind <- tt_industry_grouped_sum(mof_rawdata, industry_type, sub = sub_hs_digits, verbose = verbose)$data
industry_type <- "industry21"
stopifnot(check_industry_type(industry_type))
mof_data_with_ind <- tt_industry_grouped_sum(mof_rawdata, industry_type, sub = sub_hs_digits, verbose = verbose)$data
sub_hs_digits
mof_data_with_ind
mof_rawdata %>%
tt_df_sub_hscode(end = sub_hs_digits)
mof_rawdata %>%
tt_df_sub_hscode(end = sub_hs_digits) %>%
tt_append_area() %>%
tt_bind_industry(sub = sub_hs_digits, industry_type = industry_type, verbose = verbose) %>%
tt_spread_value(by = "year") %>%
dplyr::mutate(id = paste0(country, "-", industry))
mof_rawdata %>%
tt_df_sub_hscode(end = sub_hs_digits) %>%
tt_append_area() %>%
tt_bind_industry(sub = sub_hs_digits, industry_type = industry_type, verbose = verbose)
tmp_data <- mof_rawdata %>%
tt_df_sub_hscode(end = sub_hs_digits) %>%
tt_append_area() %>%
tt_bind_industry(sub = sub_hs_digits, industry_type = industry_type, verbose = verbose) %>%
tt_spread_value(by = "year") %>%
dplyr::mutate(id = paste0(country, "-", industry))
tmp_data
tmp_data <- mof_rawdata %>%
tt_df_sub_hscode(end = sub_hs_digits) %>%
tt_bind_industry(sub = sub_hs_digits, industry_type = industry_type, verbose = verbose) %>%
tt_append_area() %>%
tt_spread_value(by = "year") %>%
dplyr::mutate(id = paste0(country, "-", industry))
tmp_data
mof_data_with_ind
tmp_data <- mof_rawdata %>%
tt_df_sub_hscode(end = sub_hs_digits) %>%
tt_bind_industry(sub = sub_hs_digits, industry_type = industry_type, verbose = verbose)
tmp_data
library(tidyverse)
tmp_data %>% group_by(industry, country, year, value) %>% summarise(value = sum(value))
tmp_data %>% group_by(industry, country, year) %>% summarise(value = sum(value))
tmp_data %>% group_by(industry, country, year) %>% summarise(value = sum(value)) %>% arrange(country)
tmp_data %>% group_by(industry, country, year) %>% summarise(value = sum(value)) %>% arrange(country, desc(value))
tmp_data <- mof_rawdata %>%
tt_df_sub_hscode(end = sub_hs_digits) %>%
tt_bind_industry(sub = sub_hs_digits, industry_type = industry_type, verbose = verbose, col_more = TRUE)
tmp_data
tmp_data %>%
group_by(type, major, minor, industry, country, year) %>%
summarise(value = sum(value))
tmp_data %>%
group_by(type, major, minor, industry, country, year) %>%
summarise(value = sum(value)) %>% ungroup()
mof_rawdata <- mof_rawdata %>%
tt_df_sub_hscode(end = sub_hs_digits) %>%
tt_bind_industry(sub = sub_hs_digits, industry_type = industry_type, verbose = verbose, col_more = TRUE)
mof_rawdata
tmp_data <- mof_rawdata %>%
tt_append_area() %>%
tt_spread_value(by = "year") %>%
dplyr::mutate(id = paste0(country, "-", industry))
tmp_data
mof_data_with_ind <- mof_rawdata %>%
group_by(type, major, minor, industry, country, year) %>%
summarise(value = sum(value)) %>% ungroup()
tmp_data_by_id <- split(tmp_data, tmp_data$id)
tmp_data_by_id_info <- tmp_data_by_id %>%
purrr::map(~ {
.x %>%
dplyr::filter(!!rlang::sym(date_info$start_year) != 0 & !!rlang::sym(date_info$last_year) != 0 ) %>%
dplyr::mutate(
difference = !!rlang::sym(date_info$start_year) - !!rlang::sym(date_info$last_year),
growth_rate = cal_growth_rate(!!rlang::sym(date_info$start_year), !!rlang::sym(date_info$last_year)),
share = cal_share(!!rlang::sym(date_info$start_year), sum(.[[date_info$start_year]])),
rank = rank(dplyr::desc(difference))
) %>%
dplyr::arrange(dplyr::desc(difference)) %>%
tt_df_filter_top_and_bottom_n(n, difference) %>%
dplyr::mutate(sub_info = get_pn_label(difference, n = n))
}) %>%
purrr::reduce(dplyr::bind_rows) %>%
tt_df_mutate_chinese_hscode() %>%
dplyr::mutate(info = paste0(
hscode, ",", hscode_ch, ",",
"\u51fa\u53e3\u984d:", !!rlang::sym(date_info$start_year), currency, ",",
"\u6210\u9577\u7387:", growth_rate, "%", ",",
"\u4f54\u6bd4:", share, "%", ",",
"\u5dee\u7570:", difference, currency
)) %>%
dplyr::select(id, info, sub_info) %>%
dplyr::filter(!is.na(sub_info)) %>%
tidyr::complete(id, sub_info) %>%
tidyr::spread(sub_info, info) %>%
tidyr::separate(id, into = c("country", "industry"), sep = "-") %>%
dplyr::select(country, industry, dplyr::contains("\u589e\u984d"), dplyr::contains("\u6e1b\u984d"))
if (money == "usd") {
currency <- "\u5343\u7f8e\u5143"
} else {
currency <- "\u5343\u81fa\u5e63"
}
tmp_data_by_id_info <- tmp_data_by_id %>%
purrr::map(~ {
.x %>%
dplyr::filter(!!rlang::sym(date_info$start_year) != 0 & !!rlang::sym(date_info$last_year) != 0 ) %>%
dplyr::mutate(
difference = !!rlang::sym(date_info$start_year) - !!rlang::sym(date_info$last_year),
growth_rate = cal_growth_rate(!!rlang::sym(date_info$start_year), !!rlang::sym(date_info$last_year)),
share = cal_share(!!rlang::sym(date_info$start_year), sum(.[[date_info$start_year]])),
rank = rank(dplyr::desc(difference))
) %>%
dplyr::arrange(dplyr::desc(difference)) %>%
tt_df_filter_top_and_bottom_n(n, difference) %>%
dplyr::mutate(sub_info = get_pn_label(difference, n = n))
}) %>%
purrr::reduce(dplyr::bind_rows) %>%
tt_df_mutate_chinese_hscode() %>%
dplyr::mutate(info = paste0(
hscode, ",", hscode_ch, ",",
"\u51fa\u53e3\u984d:", !!rlang::sym(date_info$start_year), currency, ",",
"\u6210\u9577\u7387:", growth_rate, "%", ",",
"\u4f54\u6bd4:", share, "%", ",",
"\u5dee\u7570:", difference, currency
)) %>%
dplyr::select(id, info, sub_info) %>%
dplyr::filter(!is.na(sub_info)) %>%
tidyr::complete(id, sub_info) %>%
tidyr::spread(sub_info, info) %>%
tidyr::separate(id, into = c("country", "industry"), sep = "-") %>%
dplyr::select(country, industry, dplyr::contains("\u589e\u984d"), dplyr::contains("\u6e1b\u984d"))
mof_data_calculated <- mof_data_with_ind %>%
tt_append_area() %>%
tt_spread_value(by = "year") %>%
dplyr::mutate(
difference = !! rlang::sym(date_info$start_year) - !! rlang::sym(date_info$last_year),
growth_rate = cal_growth_rate(!! rlang::sym(date_info$start_year), !! rlang::sym(date_info$last_year)),
cagr = cal_cagr(!! rlang::sym(date_info$start_year), !! rlang::sym(date_info$end_year), period = period)
) %>%
dplyr::arrange(country) %>%
tidyr::gather("year", "value", date_info$years) %>%
dplyr::filter(year == date_info$start_year)
mof_data_calculated
tmp_data_by_id_info
dplyr::left_join(mof_data_calculated, tmp_data_by_id_info, by = c("country", "industry"))
dplyr::left_join(mof_data_calculated, tmp_data_by_id_info, by = c("country", "industry")) %>% View
mof_data_calculated <- dplyr::left_join(
mof_data_calculated, tmp_data_by_id_info,
by = c("country", "industry")
)
if (!is.null(country_list)) {
mof_data_calculated <- mof_data_calculated %>% dplyr::filter(country %in% country_list)
}
paste0(date_info$start_year, "\u5e74", date_info$start_month, "-", date_info$end_month, "\u6708")
col_label <- paste0(date_info$start_year, "\u5e74", date_info$start_month, "-", date_info$end_month, "\u6708")
chinese_column_names <- c(
"\u570b\u5bb6", "\u7522\u696d",
paste0(col_label, "\u51fa\u53e3\u984d(", currency, ")"),
paste0(col_label, "\u589e\u6e1b\u984d(", currency, ")"),
paste0(col_label, "\u51fa\u53e3\u6210\u9577\u7387(%)"),
paste0(col_label, period, "\u5e74\u51fa\u53e3\u8907\u5408\u6210\u9577\u7387(%)"),
"\u4f54\u6bd4(%)"
)
chinese_column_names
tmp_data_by_id_info
names(tmp_data_by_id_info)
names(tmp_data_by_id_info)[-1, -2]
names(tmp_data_by_id_info)[c(-1, -2)]
chinese_column_names
chinese_column_names <- c(
"\u570b\u5bb6", "\u7522\u696d",
paste0(col_label, "\u51fa\u53e3\u984d(", currency, ")"),
paste0(col_label, "\u589e\u6e1b\u984d(", currency, ")"),
paste0(col_label, "\u51fa\u53e3\u6210\u9577\u7387(%)"),
paste0(col_label, period, "\u5e74\u51fa\u53e3\u8907\u5408\u6210\u9577\u7387(%)"),
"\u4f54\u6bd4(%)", names(tmp_data_by_id_info)[c(-1, -2)]
)
chinese_column_names
mof_data_calculated
outputs <- mof_data_calculated %>%
split(.$country) %>%
purrr::map(~ {
tmp_data <- dplyr::mutate(.x, share = cal_share(value, tt_ext_world_value(.x, by_country = TRUE)))
if (contain_any_keywords(industry_type, "version1", "version2")) {
tmp_data <- tt_order_by_industry_for_reports(tmp_data, version = industry_type) %>%
dplyr::mutate(industry = tt_convert_industry_name(major, minor))
}
tmp_data %>%
dplyr::select(country, industry, value, difference, growth_rate, cagr, share, dplyr::contains("\u589e\u984d"), dplyr::contains("\u6e1b\u984d")) %>%
rlang::set_names(chinese_column_names)
}) %>%
purrr::reduce(dplyr::bind_rows)
outputs
destdir
if (!is.null(destdir)) {
output_file_name <- paste0(
date_info$start_year, "\u5e74",
date_info$start_month, "-", date_info$end_month, "\u6708",
"\u81fa\u7063\u5c0d\u5404\u570b\u51fa\u53e3\u60c5\u52e2_", format(Sys.Date(), "%Y%m%d"), ".csv"
)
readr::write_excel_csv(outputs,
file.path(destdir, output_file_name), na = "")
} else {
output_file_name <- "no output"
}
list(
filename = output_file_name,
data = outputs
)
tt_convert_industry_name
chinese_column_names
rm(list = ls())
gc()
load_all()
load_all()
test_data <- rpt_mof_export_summary_dev("2019-01", "2019-11", industry_type = "industry21", destdir = NULL)
dplyr::ungroup
dplyr::summarise
dplyr::group_by
load_all()
test_data <- rpt_mof_export_summary_dev("2019-01", "2019-11", industry_type = "industry21", destdir = NULL)
test_data
date_info
tt_vroom_mof
direct = "export"
if (direct == "export") {
port <- "\u51fa\u53e3\u984d"
} else {
port <- "\u9032\u53e3\u984d"
}
"\u51fa\u53e3\u984d("
"\u589e\u6e1b\u984d("
port
currency
load_all()
test_data <- rpt_mof_summary_dev("2019-01", "2019-02", sub_hs_digits = 4, direct = "import", industry_type = "industry21", destdir = NULL)
test_data <- rpt_mof_summary_dev("2019-01", "2019-02", sub_hs_digits = 4, direct = "export", industry_type = "industry21", destdir = NULL)
validate_tt_read_mof
tt_vroom_mof
test_data <- rpt_mof_summary_dev("2019-01", "2019-02", sub_hs_digits = 4, direct = "export", industry_type = "industry21", destdir = NULL)
direct = "export"
direct <- match.arg(direct, c("export", "import"))
direct
load_all()
test_data <- rpt_mof_summary_dev("2019-01", "2019-02", sub_hs_digits = 4, direct = "export", industry_type = "industry21", destdir = NULL)
load_all()
test_data <- rpt_mof_summary_dev("2019-01", "2019-02", sub_hs_digits = 4, direct = "export", industry_type = "industry21", destdir = NULL)
direct = "export"
direct
direct == "export"
tt_vroom_mof
start_date <- "2019-01"
end_date <- "2019-02"
period = 3
direct
money <- "usd"
dep_month_cols = TRUE
mof_rawdata <- tt_vroom_mof(start_date, end_date, period = period, direct = direct, money = money, dep_month_cols = TRUE)
mof_rawdata
direct
tt_vroom_mof
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", direct = "import", industry_type = "industry21", destdir = NULL)
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", direct = "import", industry_type = "industry21", destdir = NULL)
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", direct = "import", industry_type = "industry21", destdir = NULL)
tt_vroom_mof("2019-01", "2019-02", direct = "import", industry_type = "industry21")
tt_vroom_mof("2019-01", "2019-02", direct = "export", industry_type = "industry21")
tt_vroom_mof("2019-01", "2019-02", industry_type = "industry21")
load_all())
load_all()
tt_vroom_mof("2019-01", "2019-02", industry_type = "industry21")
tt_vroom_mof("2019-01", "2019-02")
tt_vroom_mof("2019-01", "2019-02", direct = "export")
tt_vroom_mof("2019-01", "2019-02", direct = "import")
rpt_mof_summary_dev("2019-01", "2019-02", direct = "import", industry_type = "industry21", destdir = NULL)
rpt_mof_summary_dev("2019-01", "2019-02", direct = "export", industry_type = "industry21", destdir = NULL)
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
direct
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
tt_vroom_mof
tt_vroom_mof("2019-01", "2019-02", money = "twd")
tt_vroom_mof("2019-01", "2019-02", money = "usd")
tt_vroom_mof("2019-01", "2019-02", direct = "export")
tt_vroom_mof("2019-01", "2019-02", direct = "import")
fun <- function(start_date, end_date, period = period, direct = ports, money = money, dep_month_cols = TRUE) {
tt_vroom_mof(start_date, end_date, period = period, direct = ports, money = money, dep_month_cols = TRUE)
}
fun <- function(start_date, end_date, period = 3, direct = "export", money = "usd", dep_month_cols = TRUE) {
tt_vroom_mof(start_date, end_date, period = period, direct = ports, money = money, dep_month_cols = TRUE)
}
fun("2019-01", "2019-02")
load_all()
fun("2019-01", "2019-02")
fun <- function(start_date, end_date, period = 3, ports = "export", money = "usd", dep_month_cols = TRUE) {
tt_vroom_mof(start_date, end_date, period = period, direct = ports, money = money, dep_month_cols = TRUE)
}
fun("2019-01", "2019-02")
direct
load_all()
fun("2019-01", "2019-02")
fun("2019-01", "2019-02", ports = "2")
tt_vroom_mof
load_all()
fun <- function(start_date, end_date, period = 3, ports = "export", money = "usd", dep_month_cols = TRUE) {
tt_vroom_mof(start_date, end_date, period = period, direct = ports, money = money, dep_month_cols = TRUE)
}
tt_vroom_mof
load_all()
fun <- function(start_date, end_date, period = 3, ports = "export", money = "usd", dep_month_cols = TRUE) {
tt_vroom_mof(start_date, end_date, period = period, direct = ports, money = money, dep_month_cols = TRUE)
}
fun("2019-01", "2019-02", ports = "2")
fun("2019-01", "2019-02", ports = "export")
period_list
load_all()
fun("2019-01", "2019-02", ports = "export", money = "jpd")
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
validate_tt_read_mof
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
document()
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
validate_tt_read_mof
document()
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
fun <- function(start_date, end_date, period = 3, ports = "export", money = "usd", dep_month_cols = TRUE) {
tt_vroom_mof(start_date, end_date, period = period, direct = ports, money = money, dep_month_cols = TRUE)
}
fun("2019-01", "2019-02", ports = "export", money = "jpd")
fun("2019-01", "2019-02", ports = "export", money = "usd")
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
load_all()
rpt_mof_summary_dev("2019-01", "2019-02", industry_type = "industry21", destdir = NULL)
summary.default()
summary.default
document()
summary.default
document()
check()
install()
build()
