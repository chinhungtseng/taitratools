year_var <- sort(unique(tmp_tbl$year))
} else {
year_var <- sort(unique(tmp_tbl$year))
}
tmp_tbl <- tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl <- tidyr::spread(tmp_tbl, year, value)
tmp_tbl <- dplyr::mutate_if(tmp_tbl, is.numeric, list(~ tidyr::replace_na(., 0)))
tmp_tbl$group <- "\u5168\u7403"
aggregate(tmp_tbl[, 2:3], by = list(tmp_tbl$group), FUN = sum)
tmp_tbl
tmp_tbl$group <- "\u5168\u7403"
tmp_tbl.global <- aggregate(tmp_tbl[, 2:3], by = list(tmp_tbl$group), FUN = sum)
tmp_tbl.global
tmp_tbl.global <- aggregate(.[, 2:3] ~ group, tmp_tbl, FUN = sum)
tmp_tbl
tmp_tbl
names(tmp_tbl)
names(tmp_tbl)[2:3]
aggregate(names(tmp_tbl)[2:3] ~ group, tmp_tbl, FUN = sum)
tmp_tbl$group <- "\u5168\u7403"
tmp_tbl.global <- aggregate(tmp_tbl[, 2:3], by = list(tmp_tbl$group), FUN = sum)
tmp_tbl.global
tmp_tbl
tmp_tbl <- .df
must_hav <- c("country", "year", "value")
if (!all(must_hav %in% names(tmp_tbl))) {
stop("Your data MUST contains `country`, `year`, and `value` columns!", call. = FALSE)
}
if (!(by %in% c("year", "month"))) {
stop(paste0("Invalid argument: '", by, "' ; `by` must `year` or `month`!"), call. = FALSE)
}
if (by == "year") {
tmp_tbl <- tidyr::separate(tmp_tbl, year, into = c("year", "month"))
year_var <- sort(unique(tmp_tbl$year))
} else {
year_var <- sort(unique(tmp_tbl$year))
}
tmp_tbl <- tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl <- tidyr::spread(tmp_tbl, year, value)
tmp_tbl <- dplyr::mutate_if(tmp_tbl, is.numeric, list(~ tidyr::replace_na(., 0)))
tmp_tbl.global <- tmp_tbl
tmp_tbl.global$group <- "\u5168\u7403"
tmp_tbl.global <- aggregate(tmp_tbl.global[, 2:3], by = list(tmp_tbl.global$group), FUN = sum)
tmp_tbl.global
tmp_tbl.global
tmp_tbl
tmp_tbl.global
tmp_tbl.global <- tmp_tbl
tmp_tbl.global$group <- "\u5168\u7403"
tmp_tbl.global <- tibble::as_tibble(aggregate(tmp_tbl.global[, 2:3], by = list(tmp_tbl.global$group), FUN = sum))
tmp_tbl.global
names(tmp_tbl.global) <- names(tmp_tbl)
tmp_tbl.global
2:3
year_var
year_var
length(year_var)
2:(length(year_var) + 1)
tmp_tbl.global <- tmp_tbl
tmp_tbl.global$group <- "\u5168\u7403"
tmp_tbl.global <- tibble::as_tibble(
aggregate(tmp_tbl.global[, 2:(length(year_var) + 1)], by = list(tmp_tbl.global$group), FUN = sum)
)
tmp_tbl.global
names(tmp_tbl.global) <- names(tmp_tbl)
by <- "month"
tmp_tbl <- .df
must_hav <- c("country", "year", "value")
if (!all(must_hav %in% names(tmp_tbl))) {
stop("Your data MUST contains `country`, `year`, and `value` columns!", call. = FALSE)
}
if (!(by %in% c("year", "month"))) {
stop(paste0("Invalid argument: '", by, "' ; `by` must `year` or `month`!"), call. = FALSE)
}
if (by == "year") {
tmp_tbl <- tidyr::separate(tmp_tbl, year, into = c("year", "month"))
year_var <- sort(unique(tmp_tbl$year))
} else {
year_var <- sort(unique(tmp_tbl$year))
}
tmp_tbl <- tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl <- tidyr::spread(tmp_tbl, year, value)
tmp_tbl <- dplyr::mutate_if(tmp_tbl, is.numeric, list(~ tidyr::replace_na(., 0)))
tmp_tbl
tmp_tbl.global <- tmp_tbl
tmp_tbl.global
tmp_tbl.global$group <- "\u5168\u7403"
tmp_tbl.global
2:(length(year_var) + 1)
tmp_tbl.global <- tibble::as_tibble(
aggregate(tmp_tbl.global[, 2:(length(year_var) + 1)], by = list(tmp_tbl.global$group), FUN = sum)
)
tmp_tbl.global
names(tmp_tbl.global) <- names(tmp_tbl)
tmp_tbl.global
rbind(tmp_tbl.global, tmp_tbl)
tmp_tbl
tmp_tbl <- .df
must_hav <- c("country", "year", "value")
if (!all(must_hav %in% names(tmp_tbl))) {
stop("Your data MUST contains `country`, `year`, and `value` columns!", call. = FALSE)
}
if (!(by %in% c("year", "month"))) {
stop(paste0("Invalid argument: '", by, "' ; `by` must `year` or `month`!"), call. = FALSE)
}
if (by == "year") {
tmp_tbl <- tidyr::separate(tmp_tbl, year, into = c("year", "month"))
year_var <- sort(unique(tmp_tbl$year))
} else {
year_var <- sort(unique(tmp_tbl$year))
}
tmp_tbl <- tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl <- tidyr::spread(tmp_tbl, year, value)
tmp_tbl <- dplyr::mutate_if(tmp_tbl, is.numeric, list(~ tidyr::replace_na(., 0)))
tmp_tbl
tmp_tbl
order(tmp_tbl)
(length(year_var) + 1)
tmp_tbl[(length(year_var) + 1)]
order(tmp_tbl[(length(year_var) + 1)])
tmp_tbl[(length(year_var) + 1)]
order(tmp_tbl[[(length(year_var) + 1)]])
tmp_tbl[order(tmp_tbl[[(length(year_var) + 1)]]), ]
tmp_tbl[order(tmp_tbl[[(length(year_var) + 1)]], decreasing = TRUE), ]
tmp_tbl <- tmp_tbl[order(tmp_tbl[[(length(year_var) + 1)]], decreasing = TRUE), ]
# calculate sum of all countries
tmp_tbl.global <- tmp_tbl
tmp_tbl.global$group <- "\u5168\u7403"
tmp_tbl.global <- tibble::as_tibble(
aggregate(tmp_tbl.global[, 2:(length(year_var) + 1)], by = list(tmp_tbl.global$group), FUN = sum)
)
names(tmp_tbl.global) <- names(tmp_tbl)
tmp_mix_tbl <- rbind(tmp_tbl.global, tmp_tbl)
tmp_mix_tbl
tt_cal_country_value
ind_list
#' Output report 1
#'
#' @param .start_date start date
#' @param .end_date end date
#' @param .direct import or export
#' @param .money usd or twd
#' @param .industry_keyword industry
#'
#' @return list
#' @export
tt_genReport_1 <- function(.start_date, .end_date, .direct = "export", .money = "usd", .industry_keyword) {
# data time
date_label <- paste0(.start_date, " to ", .end_date)
mof_tbl <- tt_read_mof(.start_date, .end_date, direct = .direct, money = .money, period = 1)
# filter industry by keyword
mof_tbl.industry <- tt_bind_industry(mof_tbl, major = .industry_keyword)
ind_list <- unique(mof_tbl.industry$industry)
output_tbl <- vector("list", length(ind_list))
for (i in seq(ind_list)) {
ind_lable <- ind_list[[i]]
ind_year <- sort(unique(substr(mof_tbl.industry$year, 1, 4)))
print_with_time(ind_lable)
tmp_tbl <- mof_tbl.industry[mof_tbl.industry$industry == ind_list[i], ]
tmp_mix_tbl <- tt_cal_country_value(tmp_tbl, by = "year")
# tmp_tbl <- tidyr::separate(tmp_tbl, year, into = c("year", "month"))
# tmp_tbl <- tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
# tmp_tbl <- tidyr::spread(tmp_tbl, year, value)
# tmp_tbl <- dplyr::mutate_if(tmp_tbl, is.numeric, list(~ tidyr::replace_na(., 0)))
#
# tmp_tbl.global <- dplyr::select(
#   dplyr::mutate(
#     dplyr::summarise_at(
#       tmp_tbl,
#       dplyr::vars(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
#       sum
#     ), country = "\u5168\u7403"
#   ), country, tidyselect::everything())
#
# tmp_mix_tbl <- rbind(tmp_tbl.global, tmp_tbl)
# tmp_mix_tbl <- dplyr::mutate(
#   tmp_mix_tbl,
#   difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
#   growth_rate = difference / replace(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[1]) == 0, NA) * 100,
#   shared = !!rlang::sym(ind_year[2]) / tmp_tbl.global[[ind_year[2]]] * 100
# )
#
# tmp_mix_tbl <- dplyr::arrange(tmp_mix_tbl, dplyr::desc(!!rlang::sym(ind_year[2])))
tmp_mix_tbl$industry <- ind_lable
tmp_mix_tbl$period <- date_label
output_tbl[[i]] <- tmp_mix_tbl
}
output_tbl
}
tt_cal_country_value <- function(.df, by = "year") {
tmp_tbl <- .df
must_hav <- c("country", "year", "value")
if (!all(must_hav %in% names(tmp_tbl))) {
stop("Your data MUST contains `country`, `year`, and `value` columns!", call. = FALSE)
}
if (!(by %in% c("year", "month"))) {
stop(paste0("Invalid argument: '", by, "' ; `by` must `year` or `month`!"), call. = FALSE)
}
if (by == "year") {
tmp_tbl <- tidyr::separate(tmp_tbl, year, into = c("year", "month"))
year_var <- sort(unique(tmp_tbl$year))
} else {
year_var <- sort(unique(tmp_tbl$year))
}
tmp_tbl <- tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl <- tidyr::spread(tmp_tbl, year, value)
tmp_tbl <- dplyr::mutate_if(tmp_tbl, is.numeric, list(~ tidyr::replace_na(., 0)))
tmp_tbl <- tmp_tbl[order(tmp_tbl[[(length(year_var) + 1)]], decreasing = TRUE), ]
# calculate sum of all countries
tmp_tbl.global <- tmp_tbl
tmp_tbl.global$group <- "\u5168\u7403"
tmp_tbl.global <- tibble::as_tibble(
aggregate(tmp_tbl.global[, 2:(length(year_var) + 1)], by = list(tmp_tbl.global$group), FUN = sum)
)
names(tmp_tbl.global) <- names(tmp_tbl)
tmp_mix_tbl <- rbind(tmp_tbl.global, tmp_tbl)
tmp_mix_tbl
}
tt_genReport_1("2019-01", "2019-02", .industry_keyword = "手工具")
load_all()
tt_genReport_1("2019-01", "2019-02", .industry_keyword = "手工具")
load_all()
tt_genReport_1("2019-01", "2019-02", .industry_keyword = "手工具")
load_all()
tt_genReport_1("2019-01", "2019-02", .industry_keyword = "手工具")
tmp_tbl.global[[ind_year[2]]]
"\u5168\u7403"
load_all()
tt_genReport_1("2019-01", "2019-02", .industry_keyword = "手工具")
load_all()
tt_genReport_1("2019-01", "2019-02", .industry_keyword = "手工具")
.start_date
.end_date
.start_date <- "2019-01"
.end_date <- "2019-03"
.industry_keyword <- "手工具"
# data time
date_label <- paste0(.start_date, " to ", .end_date)
mof_tbl <- tt_read_mof(.start_date, .end_date, direct = .direct, money = .money, period = 1)
# filter industry by keyword
mof_tbl.industry <- tt_bind_industry(mof_tbl, major = .industry_keyword)
ind_list <- unique(mof_tbl.industry$industry)
# data time
date_label <- paste0(.start_date, " to ", .end_date)
date_label
mof_tbl <- tt_read_mof(.start_date, .end_date, direct = .direct, money = .money, period = 1)
.direct = "export"
.money = "usd"
mof_tbl <- tt_read_mof(.start_date, .end_date, direct = .direct, money = .money, period = 1)
# filter industry by keyword
mof_tbl.industry <- tt_bind_industry(mof_tbl, major = .industry_keyword)
ind_list <- unique(mof_tbl.industry$industry)
output_tbl <- vector("list", length(ind_list))
i <- 1
ind_lable <- ind_list[[i]]
ind_year <- sort(unique(substr(mof_tbl.industry$year, 1, 4)))
print_with_time(ind_lable)
tmp_tbl <- mof_tbl.industry[mof_tbl.industry$industry == ind_list[i], ]
tmp_mix_tbl <- tt_cal_country_value(tmp_tbl, by = "year")
tmp_mix_tbl
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = difference / replace(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[1]) == 0, NA) * 100,
shared = !!rlang::sym(ind_year[2]) / .[1, ][["\u5168\u7403"]] * 100
)
tmp_mix_tbl[1, ]
tmp_mix_tbl[1, ][["\u5168\u7403"]]
"\u5168\u7403"
tmp_mix_tbl[1, ][[c("\u5168\u7403")]]
sym(ind_year[1])
rlang::sym(ind_year[1])
rlang::sym(ind_year[1])
rlang::sym(ind_year[2])
ind_year[2]
tmp_mix_tbl[1, ][[ind_year[2]]]
tmp_mix_tbl[1, ][[ind_year[2]]]
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = difference / replace(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[1]) == 0, NA) * 100,
shared = !!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]] * 100
)
tmp_mix_tbl <- dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = difference / replace(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[1]) == 0, NA) * 100,
shared = !!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]] * 100
)
tmp_mix_tbl <- dplyr::arrange(tmp_mix_tbl, dplyr::desc(!!rlang::sym(ind_year[2])))
tmp_mix_tbl$industry <- ind_lable
tmp_mix_tbl$period <- date_label
tmp_mix_tbl
load_all()
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = cal_GR(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
shared = !!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]] * 100
)
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = cal_growth_rate(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
shared = cal_share(!!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]])
)
load_all()
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = cal_growth_rate(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
shared = cal_share(!!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]])
)
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = cal_growth_rate(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
shared = cal_share(!!rlang::sym(ind_year[2]), tmp_mix_tbl[1, ][[ind_year[2]]])
)
ind_year
tmp_mix_tbl
# data time
date_label <- paste0(.start_date, " to ", .end_date)
mof_tbl <- tt_read_mof(.start_date, .end_date, direct = .direct, money = .money, period = 1)
# filter industry by keyword
mof_tbl.industry <- tt_bind_industry(mof_tbl, major = .industry_keyword)
ind_list <- unique(mof_tbl.industry$industry)
output_tbl <- vector("list", length(ind_list))
ind_lable <- ind_list[[i]]
ind_year <- sort(unique(substr(mof_tbl.industry$year, 1, 4)))
print_with_time(ind_lable)
tmp_tbl <- mof_tbl.industry[mof_tbl.industry$industry == ind_list[i], ]
tmp_tbl
tmp_mix_tbl <- tt_cal_country_value(tmp_tbl, by = "year")
tmp_mix_tbl
ind_year
c_year <- rlang::sym(ind_year[2])
l_year <- rlang::sym(ind_year[1])
c_year
l_year
print_with_time(ind_lable)
tmp_tbl <- mof_tbl.industry[mof_tbl.industry$industry == ind_list[i], ]
tmp_mix_tbl <- tt_cal_country_value(tmp_tbl, by = "year")
tmp_mix_tbl
tmp_mix_tbl <- dplyr::mutate(
tmp_mix_tbl,
difference = !!c_year - !!l_year,
growth_rate = cal_growth_rate(!!l_year, !!c_year),
shared = cal_share(!!c_year, tmp_mix_tbl[1, ][[ind_year[2]]])
)
tmp_mix_tbl
tmp_mix_tbl <- dplyr::arrange(tmp_mix_tbl, dplyr::desc(!!c_year))
tmp_mix_tbl
tmp_mix_tbl$industry <- ind_lable
tmp_mix_tbl$period <- date_label
output_tbl[[i]] <- tmp_mix_tbl
output_tbl
document()
check()
use_tidy_versions()
check()
document()
check()
document()
check()
importFrom("stats", "aggregate")
document(m)
document()
check()
desc
sym
library(tidyverse)
sym
sym
mutate
arrange
desc
as_tibble
spread
mutate_if
replace_na
as_tibble
load_all()
tmp_tbl
tt_cal_country_value(tmp_tbl)
load_all()
tt_cal_country_value(tmp_tbl)
test <- tt_cal_country_value(tmp_tbl)
View(test)
document()
check()
document()
check()
document()
document()
check()
tidyr:::value
check()
use_tidy_versions()
document()
check()
tmp_tbl
globalVariables(names(tmp_tbl))
check()
check()
insall()
install()
document()
check()
install()
build()
docuem
document()
ddocument()
document()
check()
document()
check()
install()
build()
document()
check()
use_github()
use_git()
use_github()
document()
browse_github_token()
github_token()
use_github()
use_github()
install_github("chinhung/taitratools")
file.exists("~/.ssh/id_rsa.pub")
install()
load_all()
# TODO Adding some common
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
tt_source_path <- as.list(tmp_path$path)
names(tt_source_path) <- tmp_path$name
tt_source_path
# industry21 data
tmp_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
tt_ind21_list <- c("001", "007", "018", "028", "033", "045", "050", "054", "058", "062",
"078", "083", "088", "102", "105", "106", "107", "108", "110", "115",
"120", "134", "157", "158", "174", "175", "179", "180", "184", "185",
"189", "196", "197", "198", "199", "222", "223", "224", "225", "226",
"227", "228", "229", "233", "234", "238", "239", "240", "241", "257",
"263", "298", "353", "354")
tt_ind21_tbl <- tmp_tbl[tmp_tbl[["\u7DE8\u865F"]] %in% tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
tt_ind21_tbl
save(tt_source_path, tt_ind21_tbl, tt_ind21_list, file = "R/sysdata.rda")
install()
check()
document()
check()
install()
build()
load_all()
# TODO Adding some common
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
tt_source_path <- as.list(tmp_path$path)
names(tt_source_path) <- tmp_path$name
# industry21 data
tmp_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
tt_ind21_list <- c("001", "007", "018", "028", "033", "045", "050", "054", "058", "062",
"078", "083", "088", "102", "105", "106", "107", "108", "110", "115",
"120", "134", "157", "158", "174", "175", "179", "180", "184", "185",
"189", "196", "197", "198", "199", "222", "223", "224", "225", "226",
"227", "228", "229", "233", "234", "238", "239", "240", "241", "257",
"263", "298", "353", "354")
tt_ind21_tbl <- tmp_tbl[tmp_tbl[["\u7DE8\u865F"]] %in% tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
save(tt_source_path, tt_ind21_tbl, tt_ind21_list, file = "R/sysdata.rda")
check()
install()
build()
# TODO Adding some common
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
tt_source_path <- as.list(tmp_path$path)
names(tt_source_path) <- tmp_path$name
# industry21 data
tmp_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
tt_ind21_list <- c("001", "007", "018", "028", "033", "045", "050", "054", "058", "062",
"078", "083", "088", "102", "105", "106", "107", "108", "110", "115",
"120", "134", "157", "158", "174", "175", "179", "180", "184", "185",
"189", "196", "197", "198", "199", "222", "223", "224", "225", "226",
"227", "228", "229", "233", "234", "238", "239", "240", "241", "257",
"263", "298", "353", "354")
tt_ind21_tbl <- tmp_tbl[tmp_tbl[["\u7DE8\u865F"]] %in% tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
save(tt_source_path, tt_ind21_tbl, tt_ind21_list, file = "R/sysdata.rda")
load_all()
tt_ls()
install()
build()
tt_ls()
load_all()
tt_ls()
library(taitratools)
tt_df_show()
document()
check()
load_all()
taitratools::tt_genReport_1("2019-01", "2019-02", .industry_keyword = "手工具")
taitratools::tt_genReport_1("2019-01", "2019-02", .industry_keyword = "不織布")
taitratools::tt_genReport_1("2019-01", "2019-02", .industry_keyword = "機械")
install()
load_all()
tt_genReport_1("2019-01", "2019-02", .industry_keyword = "航太")
rpt_by_industry_1("2019-01", "2019-02", .industry_keyword = "航太")
rpt_by_industry_1("2019-01", "2019-09", .industry_keyword = "航太")
rpt_by_industry_1("2018-01", "2018-12", .industry_keyword = "航太")
