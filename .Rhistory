tmp <- unique(.full_hscode_tbl[x])
names(tmp) <- c("hscode", "hscode_cn")
tmp
})
.full_hscode_tbl <- Reduce(rbind, tmp)
# area data
.area_tbl <- tt_read_table(tt_get_path("PATH_AREA"))
.area_tbl[.area_tbl$areaName == "全球", ][["countryName"]] <- "[\\w\\W]+"
# save data
save(.tt_source_path, .tt_ind21_tbl, .industry_tbl, .tt_ind21_list, .full_hscode_tbl, .area_tbl, file = "R/sysdata.rda")
}
tt_update_data()
load_all()
getsourcepath <- function() {
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
save(.tt_source_path, file = "R/sysdata.rda")
}
getsourcepath()
tt_update_data <- function() {
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
# industry21 data
.industry_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
.tt_ind21_list <- tt_read_table("inst/extdata/industry_21_list.xlsx")[["\u7DE8\u865F"]]
.tt_ind21_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
# full hsocde data
.full_hscode_tbl <- tt_read_table(tt_get_path("PATH_FULL_HSCODE"))
tmp <- lapply(list(1:2, 3:4, 5:6, 7:8, 9:10), function(x) {
tmp <- unique(.full_hscode_tbl[x])
names(tmp) <- c("hscode", "hscode_cn")
tmp
})
.full_hscode_tbl <- Reduce(rbind, tmp)
# area data
.area_tbl <- tt_read_table(tt_get_path("PATH_AREA"))
.area_tbl[.area_tbl$areaName == "全球", ][["countryName"]] <- "[\\w\\W]+"
# save data
save(.tt_source_path, .tt_ind21_tbl, .industry_tbl, .tt_ind21_list, .full_hscode_tbl, .area_tbl, file = "R/sysdata.rda")
}
tt_update_data()
load_all()
tt_ls()
.industry_tbl
taitratools:::.tt_ind21_list
# TODO Adding some common
getsourcepath <- function() {
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
save(.tt_source_path, file = "R/sysdata.rda")
}
getsourcepath()
tt_update_data()
load_all()
taitratools:::.industry_tbl
tr <- tt_read_mof("2019-01", "2019-01")
tt_bind_industry(tr)
build()
tt_read_table(tt_get_path("PATH_INDUSTRY"))
tt_read_table(tt_get_path("PATH_INDUSTRY"))[["report"]]
tt_read_table(tt_get_path("PATH_INDUSTRY"))[["reports"]]
tt_read_table(tt_get_path("PATH_INDUSTRY"))[["reports"]] == 1
tt_read_table(tt_get_path("PATH_INDUSTRY"))[tt_read_table(tt_get_path("PATH_INDUSTRY"))[["reports"]] == 1]
.tt_ind21_list
.industry_tbl
.industry_tbl[["reports"]]
# industry21 data
.industry_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
.industry_tbl
load_all()
taitratools:::.industry_tbl
.industry_tbl
.industry_tbl[["reports"]]
.industry_tbl[.industry_tbl[["reports"]] == 1]
.industry_tbl[.industry_tbl[["reports"]] == 1, ]
"\u7DE8\u865F"
.industry_tbl[.industry_tbl[["reports"]] == 1, ][["\u7DE8\u865F"]]
# TODO Adding some common
getsourcepath <- function() {
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
save(.tt_source_path, file = "R/sysdata.rda")
}
tt_update_data <- function() {
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
# industry21 data
.industry_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
.tt_ind21_list <- .industry_tbl[.industry_tbl[["reports"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind21_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
# full hsocde data
.full_hscode_tbl <- tt_read_table(tt_get_path("PATH_FULL_HSCODE"))
tmp <- lapply(list(1:2, 3:4, 5:6, 7:8, 9:10), function(x) {
tmp <- unique(.full_hscode_tbl[x])
names(tmp) <- c("hscode", "hscode_cn")
tmp
})
.full_hscode_tbl <- Reduce(rbind, tmp)
# area data
.area_tbl <- tt_read_table(tt_get_path("PATH_AREA"))
.area_tbl[.area_tbl$areaName == "全球", ][["countryName"]] <- "[\\w\\W]+"
# save data
save(.tt_source_path, .tt_ind21_tbl, .industry_tbl, .tt_ind21_list, .full_hscode_tbl, .area_tbl, file = "R/sysdata.rda")
}
getsourcepath()
# TODO Adding some common
getsourcepath <- function() {
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
save(.tt_source_path, file = "R/sysdata.rda")
}
tt_update_data <- function() {
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
# industry21 data
.industry_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
.tt_ind21_list <- .industry_tbl[.industry_tbl[["reports"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind21_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
# full hsocde data
.full_hscode_tbl <- tt_read_table(tt_get_path("PATH_FULL_HSCODE"))
tmp <- lapply(list(1:2, 3:4, 5:6, 7:8, 9:10), function(x) {
tmp <- unique(.full_hscode_tbl[x])
names(tmp) <- c("hscode", "hscode_cn")
tmp
})
.full_hscode_tbl <- Reduce(rbind, tmp)
# area data
.area_tbl <- tt_read_table(tt_get_path("PATH_AREA"))
.area_tbl[.area_tbl$areaName == "全球", ][["countryName"]] <- "[\\w\\W]+"
# save data
save(.tt_source_path, .tt_ind21_tbl, .industry_tbl, .tt_ind21_list, .full_hscode_tbl, .area_tbl, file = "R/sysdata.rda")
}
getsourcepath()
tt_update_data()
load_all()
taitratools:::.industry_tbl
.tt_ind21_list
.tt_ind21_tbl
install()
build()
load_all()
tt_get_path("PATH_AREA")
tt_ls()
# TODO Adding some common
getsourcepath <- function() {
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
save(.tt_source_path, file = "R/sysdata.rda")
}
tt_update_data <- function() {
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
# industry21 data
.industry_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
.tt_ind21_list <- .industry_tbl[.industry_tbl[["reports"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind21_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
# full hsocde data
.full_hscode_tbl <- tt_read_table(tt_get_path("PATH_FULL_HSCODE"))
tmp <- lapply(list(1:2, 3:4, 5:6, 7:8, 9:10), function(x) {
tmp <- unique(.full_hscode_tbl[x])
names(tmp) <- c("hscode", "hscode_cn")
tmp
})
.full_hscode_tbl <- Reduce(rbind, tmp)
# area data
.area_tbl <- tt_read_table(tt_get_path("PATH_AREA"))
.area_tbl[.area_tbl$areaName == "全球", ][["countryName"]] <- "[\\w\\W]+"
# save data
save(.tt_source_path, .tt_ind21_tbl, .industry_tbl, .tt_ind21_list, .full_hscode_tbl, .area_tbl, file = "R/sysdata.rda")
}
getsourcepath()
tt_update_data()
load_all()
tt_ls()
# TODO Adding some common
getsourcepath <- function() {
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
save(.tt_source_path, file = "R/sysdata.rda")
}
tt_update_data <- function() {
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
# industry21 data
.industry_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
.tt_ind21_list <- .industry_tbl[.industry_tbl[["reports"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind21_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
# full hsocde data
.full_hscode_tbl <- tt_read_table(tt_get_path("PATH_FULL_HSCODE"))
tmp <- lapply(list(1:2, 3:4, 5:6, 7:8, 9:10), function(x) {
tmp <- unique(.full_hscode_tbl[x])
names(tmp) <- c("hscode", "hscode_cn")
tmp
})
.full_hscode_tbl <- Reduce(rbind, tmp)
# area data
.area_tbl <- tt_read_table(tt_get_path("PATH_AREA"))
.area_tbl[.area_tbl$areaName == "全球", ][["countryName"]] <- "[\\w\\W]+"
# save data
save(.tt_source_path, .tt_ind21_tbl, .industry_tbl, .tt_ind21_list, .full_hscode_tbl, .area_tbl, file = "R/sysdata.rda")
}
getsourcepath()
tt_update_data()
tt_ls()
load_all()
tt_ls()
load_all()
tt_ls()
.tt_source_path
names(.tt_source_path)
exists(.tt_source_path)
ls()
ls(envir = "taitratools")
ls(envir = "package:taitratools")
rlang::search_envs()
ls(envir = package:taitratools)
ls(envir = "package:taitratools")
get(ls(), envir = "package:taitratools")
ls("package:taitratools")
ls("package:taitratools", all = TRUE)
ls("package:taitratools", all = TRUE, pattern = "^\\.")
usethis::use_testthat()
test()
library(testthat)
expect_equal(10, 10)
expect_equal(10, 102)
expect_equal(10, 10 + 1e-7)
expect_equal(10, 11)
expect_identical(10, 10 + 1e-7)
string <- "Testing is fun!"
expect_match(string, "Testing")
expect_match(string, " ")
expect_match(string, "is")
expect_match(string, "is ")
expect_match(string, "is  ")
expect_match(string, "is f")
expect_match
a <- list(1:10, letters)
expect_output(str(a), "List of 2")
expect_output(str(a), "List of 3")
str(a)
str(.tt_ind21_tbl)
expect_output(str(.tt_ind21_tbl), "List of 2")
bquote
ls("package:taitratools", all = TRUE, pattern = "^\\.")
.area_tbl
.industry_tbl
.tt_ind21_list
library(taitratools)
ls("package:taitratools", all = TRUE, pattern = "^\\.")
ls("package:taitratools", all = TRUE, pattern = "^\\.")
tt_pkg_data <- ls("package:taitratools", all = TRUE, pattern = "^\\.")
tt_pkg_data
library(testthat)
c(".area_tbl", ".full_hscode_tbl", ".industry_tbl", ".tt_ind21_list", ".tt_ind21_tbl", ".tt_source_path" )
expect_identical(tt_pkg_data,
c(".area_tbl", ".full_hscode_tbl", ".industry_tbl", ".tt_ind21_list", ".tt_ind21_tbl", ".tt_source_path" ))
expect_identical(tt_pkg_data, c(".area_tbl", ".full_hscode_tbl", ".industry_tbl", ".tt_ind21_list", ".tt_ind21_tbl", ".tt_source_path" ))
expect_identical(tt_pkg_data, c(".area_tbld", ".full_hscode_tbl", ".industry_tbl", ".tt_ind21_list", ".tt_ind21_tbl", ".tt_source_path" ))
document()
test()
test()
test()
tt_get_path()
tt_ls()
str(tt_ls())
.tt_source_path
.tt_source_path
names(.tt_source_path)
expect_output(names(.tt_source_path), regexp = "^NAS|^SOURCE|^PATH")
names(.tt_source_path)
expect_match(names(.tt_source_path), regexp = "^NAS|^SOURCE|^PATH")
expect_match(names(.tt_source_path), regexp = "^NAS|^SOURCE|^PATH_")
expect_match(names(.tt_source_path), regexp = "^NAS|^SOURCE|^PATHn")
expect_match(names(.tt_source_path), regexp = "^NAS_|^SOURCE_|^PATH_")
test_that("check sources name correct", {
expect_match(names(.tt_source_path), regexp = "^NAS_|^SOURCE_|^PATH_")
})
test()
.tt_source_path
str(.tt_source_path)
pkg_data
ls("package:taitratools", all = TRUE, pattern = "^\\.")
.full_hscode_tbl
ls("package:taitratools", all = TRUE, pattern = "_tbl$")
pkg_data_tbls <- ls("package:taitratools", all = TRUE, pattern = "_tbl$")
pkg_data_tbls
expect_type(.area_tbl, is.data.frame())
.area_tbl
pkg_data_tbls
expect_type(pkg_data_tbls, is.data.frame())
expect_type
expect_type(pkg_data_tbls, is.data.frame)
expect_type(.area_tbl, is.data.frame)
expect_type(.area_tbl, "data.frame")
.area_tbl
names(.area_tbl)
expect_identical(.area_tbl, c("areaName", "countryName"))
.area_tbl
expect_identical(names(.area_tbl), c("areaName", "countryName"))
.industry_tbl
.tt_ind21_list
.tt_ind21_tbl
.tt_source_path
context("String")
library(taitratools)
str2regex("123,456,789")
str2regex("ABC,123,###")
str2regex("ABC,123,###, <<<")
str2regex("this,is,an,apple)
})
str2regex("this,is,an,apple")
str2regex("this,is,an,apple")
expect_output(str2regex("this,is,an,apple"), "^this|^is|^an|^apple")
expect_match(str2regex("this,is,an,apple"), "^this|^is|^an|^apple")
expect_equal(str2regex("this,is,an,apple"), "^this|^is|^an|^apple")
expect_equal(str2regex("this,is,an,apple"), "^this|^igs|^an|^apple")
expect_equal(str2regex("this,is,an,apple"), "^this|^is|^an|^apple")
str2regex("this,is,an,apple", start = "", end = "")
expect_equal(str2regex("this,is,an,apple", start = "", end = ""), "this|is|an|apple")
str2regex("123456,234567,345678,456789", sub = 4)
expect_equal(str2regex("123456,234567,345678,456789", sub = 4), "^1234|^2345|^3456|^4567")
str2regex("a, b, c, d, e")
expect_equal(str2regex("a,  b,  c,  d,  e"), "^a|^b|^c|^d|^e")
str2regex("a&b&c&d&e", sep = "&")
expect_equal(str2regex("a&b&c&d&e", sep = "&"), "^a|^b|^c|^d|^e")
test()
check()
document()
test()
check()
load_all()
test()
check()
pkg_data <- ls("package:taitratools", all = TRUE, pattern = "^\\.")
data_check <- c(".area_tbl",
".full_hscode_tbl",
".industry_tbl",
".tt_ind21_list",
".tt_ind21_tbl",
".tt_source_path")
expect_identical(pkg_data, data_check)
check()
check()
ls("package:taitratools", all = TRUE, pattern = "^\\.")
exists(data(".area_tbl", package = "taitratools"))
.tt_source_path
check()
ls(all = TRUE, pattern = "^\\..*_(tbl)|(list)|(path)")
check()
test()
ls("package:taitratools", all = TRUE, pattern = "^\\.")
get(ls("package:taitratools", all = TRUE, pattern = "^\\."))
mget(ls("package:taitratools", all = TRUE, pattern = "^\\."))
?get
pkg_data <- get(ls("package:taitratools", all = TRUE, pattern = "^\\."))
ls("package:taitratools", all = TRUE, pattern = "^\\.")
get(ls("package:taitratools", all = TRUE, pattern = "^\\."))
mget(ls("package:taitratools", all = TRUE, pattern = "^\\."))
rlang::current_env()
ls(rlang::current_env(), all = TRUE, pattern = "^\\.")
break_line
break_line("Hello, this is an apple! I love eat apple!")
break_line("There was once a mother duck.  This mother duck had no children yet for none of her eggs had hatched.")
break_line("I want to go to the pond, Mother,” one baby duck quacked.")
break_line("Let’s go!  Let’s go!” two more quacked excitedly.", length = 5)
test()
test()
document()
test()
load_all()
test()
ddocument()
document()
test()
expect_identical(
break_line("I want to go to the pond, Mother,” one baby duck quacked."),
"I want to go to the pond,\n Mother,” one baby duck q\nuacked."
)
test()
expect_equal
test()
test()
test()
break_line("I want to go to the pond, Mother, one baby duck quacked.")
break_line("Lets go!  Lets go! two more quacked excitedly.", length = 5)
check()
test()
test_df <- data.frame(
country = c("A", "B", "C", "D"),
`2018` = c(100, 200, 300, 400),
`2019` = rep(200, 4)
)
test_df
test_df <- data.frame(
country = c("A", "B", "C", "D"),
year2018 = c(100, 200, 300, 400),
year2019 = rep(200, 4)
)
test_df
test_df(test_df$year2019, test_df$year2018)
cal_growth_rate(test_df$year2019, test_df$year2018)
expect_equivalent(
cal_growth_rate(test_df$year2019, test_df$year2018),
c(100.0000, 0.0000, -33.3333, -50.0000)
)
test()
test()
cal_share
cal_share(test_df$year2019, sum(test_df$year2019))
cal_share(test_df$year2018, sum(test_df$year2018))
test_that("cal_share", {
expect_equivalent(
cal_share(test_df$year2018, sum(test_df$year2018)),
c(10, 20, 30, 40)
)
})
cal_cagr
test_df <- data.frame(
country = c("A", "B", "C", "D"),
year2017 = c(200, 300, 400, 500),
year2018 = c(100, 200, 300, 400),
year2019 = rep(200, 4)
)
test_df
cal_cagr(test_df$year2019, test_df$year2018, 2)
test_that("cal_cagr", {
expect_equivalent(
cal_cagr(test_df$year2019, test_df$year2018, 2),
c(41.4214, 0.0000, -18.3503, -29.2893)
)
})
cal_cagr(test_df$year2019, test_df$year2017, 2)
test_that("cal_cagr", {
expect_equivalent(
cal_cagr(test_df$year2019, test_df$year2017, 2),
c(0.0000, -18.3503, -29.2893, -36.7544)
)
})
test()
tt_hscode_show("e動物")
tt_hscode_show("動物")
tt_hscode_show("活動物")
tt_hscode_show("01活動物")
tt_hscode_show(chinese = "活動物")
tt_hscode_show
# sample data
mof_tbl <- tt_read_mof("2018-01", "2018-02", period = 0, direct = "export", money = "usd")
mof_tbl
# sample data
.sample_mof_tbl <- tt_read_mof("2018-01", "2018-01", period = 0, direct = "export", money = "usd")
object.size(.sample_mof_tbl)
7759160 /1024
7759160 /1024/1024
.sample_mof_tbl[c(1, 4, 9, 10)]
# sample data
.sample_mof_tbl <- tt_read_mof("2018-01", "2018-02", period = 0, direct = "export", money = "usd", dep_month_cols = TRUE)
.sample_mof_tbl
.sample_mof_tbl <- .sample_mof_tbl[c(1, 4, 9, 10, 11)]
.sample_mof_tbl
object.size(.sample_mof_tbl)
sample_mof_tbl <- .sample_mof_tbl
.industry_tbl
load_all()
.industry_tbl
tt_bind_industry
tmp_tbl[c("選擇方式", "大項",
"細項", "hscode", "industry")]
tmp_tbl <- .industry_tbl
tmp_tbl[c("選擇方式", "大項",
"細項", "hscode", "industry")]
.df <- tt_read_mof("2019-10")
.df <- tt_read_mof("2019-10", "2019-10")
sub = 8
load_all()
numeric2Chinese(123456789)
numeric2Chinese(12345678987654321)
numeric2Chinese(1234567898765432)
1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e+1000
1e+100
1e+100 * 4
1e+100 * 900
1e+100 * 900.2
1e+100 * 900.284654651354
1e+100 * 900.284654651354e+900
1e+100 * 900.284654651354e+10
1e+100 * 900.284654651354e+100
1e+100 * 900.284654651354e+100* 900.284654651354e+100
load_all()
load_all()
load_all()
cal_share(1, 5)
cal_share(1, 0)
install()
load_all()
