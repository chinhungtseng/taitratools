tmp_mix_tbl[1, ]
tmp_mix_tbl[1, ][["\u5168\u7403"]]
"\u5168\u7403"
tmp_mix_tbl[1, ][[c("\u5168\u7403")]]
sym(ind_year[1])
rlang::sym(ind_year[1])
rlang::sym(ind_year[1])
rlang::sym(ind_year[2])
ind_year[2]
tmp_mix_tbl[1, ][[ind_year[2]]]
tmp_mix_tbl[1, ][[ind_year[2]]]
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = difference / replace(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[1]) == 0, NA) * 100,
shared = !!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]] * 100
)
tmp_mix_tbl <- dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = difference / replace(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[1]) == 0, NA) * 100,
shared = !!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]] * 100
)
tmp_mix_tbl <- dplyr::arrange(tmp_mix_tbl, dplyr::desc(!!rlang::sym(ind_year[2])))
tmp_mix_tbl$industry <- ind_lable
tmp_mix_tbl$period <- date_label
tmp_mix_tbl
load_all()
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = cal_GR(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
shared = !!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]] * 100
)
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = cal_growth_rate(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
shared = cal_share(!!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]])
)
load_all()
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = cal_growth_rate(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
shared = cal_share(!!rlang::sym(ind_year[2]) / tmp_mix_tbl[1, ][[ind_year[2]]])
)
dplyr::mutate(
tmp_mix_tbl,
difference = !!rlang::sym(ind_year[2]) - !!rlang::sym(ind_year[1]),
growth_rate = cal_growth_rate(!!rlang::sym(ind_year[1]), !!rlang::sym(ind_year[2])),
shared = cal_share(!!rlang::sym(ind_year[2]), tmp_mix_tbl[1, ][[ind_year[2]]])
)
ind_year
tmp_mix_tbl
# data time
date_label <- paste0(.start_date, " to ", .end_date)
mof_tbl <- tt_read_mof(.start_date, .end_date, direct = .direct, money = .money, period = 1)
# filter industry by keyword
mof_tbl.industry <- tt_bind_industry(mof_tbl, major = .industry_keyword)
ind_list <- unique(mof_tbl.industry$industry)
output_tbl <- vector("list", length(ind_list))
ind_lable <- ind_list[[i]]
ind_year <- sort(unique(substr(mof_tbl.industry$year, 1, 4)))
print_with_time(ind_lable)
tmp_tbl <- mof_tbl.industry[mof_tbl.industry$industry == ind_list[i], ]
tmp_tbl
tmp_mix_tbl <- tt_cal_country_value(tmp_tbl, by = "year")
tmp_mix_tbl
ind_year
c_year <- rlang::sym(ind_year[2])
l_year <- rlang::sym(ind_year[1])
c_year
l_year
print_with_time(ind_lable)
tmp_tbl <- mof_tbl.industry[mof_tbl.industry$industry == ind_list[i], ]
tmp_mix_tbl <- tt_cal_country_value(tmp_tbl, by = "year")
tmp_mix_tbl
tmp_mix_tbl <- dplyr::mutate(
tmp_mix_tbl,
difference = !!c_year - !!l_year,
growth_rate = cal_growth_rate(!!l_year, !!c_year),
shared = cal_share(!!c_year, tmp_mix_tbl[1, ][[ind_year[2]]])
)
tmp_mix_tbl
tmp_mix_tbl <- dplyr::arrange(tmp_mix_tbl, dplyr::desc(!!c_year))
tmp_mix_tbl
tmp_mix_tbl$industry <- ind_lable
tmp_mix_tbl$period <- date_label
output_tbl[[i]] <- tmp_mix_tbl
output_tbl
document()
check()
use_tidy_versions()
check()
document()
check()
document()
check()
importFrom("stats", "aggregate")
document(m)
document()
check()
desc
sym
library(tidyverse)
sym
sym
mutate
arrange
desc
as_tibble
spread
mutate_if
replace_na
as_tibble
load_all()
tmp_tbl
tt_cal_country_value(tmp_tbl)
load_all()
tt_cal_country_value(tmp_tbl)
test <- tt_cal_country_value(tmp_tbl)
View(test)
document()
check()
document()
check()
document()
document()
check()
tidyr:::value
check()
use_tidy_versions()
document()
check()
tmp_tbl
globalVariables(names(tmp_tbl))
check()
check()
insall()
install()
document()
check()
install()
build()
docuem
document()
ddocument()
document()
check()
document()
check()
install()
build()
document()
check()
use_github()
use_git()
use_github()
document()
browse_github_token()
github_token()
use_github()
use_github()
install_github("chinhung/taitratools")
file.exists("~/.ssh/id_rsa.pub")
install()
load_all()
# TODO Adding some common
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
tt_source_path <- as.list(tmp_path$path)
names(tt_source_path) <- tmp_path$name
tt_source_path
# industry21 data
tmp_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
tt_ind21_list <- c("001", "007", "018", "028", "033", "045", "050", "054", "058", "062",
"078", "083", "088", "102", "105", "106", "107", "108", "110", "115",
"120", "134", "157", "158", "174", "175", "179", "180", "184", "185",
"189", "196", "197", "198", "199", "222", "223", "224", "225", "226",
"227", "228", "229", "233", "234", "238", "239", "240", "241", "257",
"263", "298", "353", "354")
tt_ind21_tbl <- tmp_tbl[tmp_tbl[["\u7DE8\u865F"]] %in% tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
tt_ind21_tbl
save(tt_source_path, tt_ind21_tbl, tt_ind21_list, file = "R/sysdata.rda")
install()
check()
document()
check()
install()
build()
load_all()
# TODO Adding some common
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
tt_source_path <- as.list(tmp_path$path)
names(tt_source_path) <- tmp_path$name
# industry21 data
tmp_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
tt_ind21_list <- c("001", "007", "018", "028", "033", "045", "050", "054", "058", "062",
"078", "083", "088", "102", "105", "106", "107", "108", "110", "115",
"120", "134", "157", "158", "174", "175", "179", "180", "184", "185",
"189", "196", "197", "198", "199", "222", "223", "224", "225", "226",
"227", "228", "229", "233", "234", "238", "239", "240", "241", "257",
"263", "298", "353", "354")
tt_ind21_tbl <- tmp_tbl[tmp_tbl[["\u7DE8\u865F"]] %in% tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
save(tt_source_path, tt_ind21_tbl, tt_ind21_list, file = "R/sysdata.rda")
check()
install()
build()
# TODO Adding some common
# tt_source_path data
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
tt_source_path <- as.list(tmp_path$path)
names(tt_source_path) <- tmp_path$name
# industry21 data
tmp_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
tt_ind21_list <- c("001", "007", "018", "028", "033", "045", "050", "054", "058", "062",
"078", "083", "088", "102", "105", "106", "107", "108", "110", "115",
"120", "134", "157", "158", "174", "175", "179", "180", "184", "185",
"189", "196", "197", "198", "199", "222", "223", "224", "225", "226",
"227", "228", "229", "233", "234", "238", "239", "240", "241", "257",
"263", "298", "353", "354")
tt_ind21_tbl <- tmp_tbl[tmp_tbl[["\u7DE8\u865F"]] %in% tt_ind21_list, ][c("\u7DE8\u865F", "industry")]
save(tt_source_path, tt_ind21_tbl, tt_ind21_list, file = "R/sysdata.rda")
load_all()
tt_ls()
install()
build()
tt_ls()
load_all()
tt_ls()
library(taitratools)
tt_df_show()
document()
check()
load_all()
taitratools::tt_genReport_1("2019-01", "2019-02", .industry_keyword = "手工具")
taitratools::tt_genReport_1("2019-01", "2019-02", .industry_keyword = "不織布")
taitratools::tt_genReport_1("2019-01", "2019-02", .industry_keyword = "機械")
install()
load_all()
tt_genReport_1("2019-01", "2019-02", .industry_keyword = "航太")
rpt_by_industry_1("2019-01", "2019-02", .industry_keyword = "航太")
rpt_by_industry_1("2019-01", "2019-09", .industry_keyword = "航太")
rpt_by_industry_1("2018-01", "2018-12", .industry_keyword = "航太")
load_all()
check()
install()
taitratools:::cal_growth_rate
load_all()
check()
load_all()
install()
build()
load_all()
tt_df_show("PATH_AREA")
test <- tibble(x = 1:2, y = c("a", "b"))
test <- tibble::tibble(x = 1:2, y = c("a", "b"))
test
list(test)
library(tidyverse)
purrr::reduce(list(test), bind_rows)
purrr::reduce(list(test), bind_rows, .init = tibble(0))
load_all()
document()
check()
load_all()
rpt_country_value
rpt_by_industry_1()
rpt_by_industry_1
load_all()
.start_date
.end_date
.start_date <- "2019-01"
.end_date <- "2019-05"
.direct = "export"
.money = "usd"
# data time
date_label <- paste0(.start_date, " to ", .end_date)
date_label
mof_tbl <- tt_read_mof(.start_date, .end_date, direct = .direct, money = .money, period = 1)
mof_tbl
.industry_keyword
.industry_keyword <- "手工具"
# filter industry by keyword
mof_tbl.industry <- tt_bind_industry(mof_tbl, major = .industry_keyword)
mof_tbl.industry
ind_list <- unique(mof_tbl.industry$industry)
ind_list
rpt_country_value
.df <- tt_read_mof("2019-01", "2019-03", period = 2)
rpt_country_value(.df)
library(taitratools)
check()
build()
install()
load_all()
rpt_by_industry_1("2019-01", "2019-04", .industry_keyword = "手工具")
test <- tt_read_mof("2019-01", "2019-03", 1)
load_all()
test <- tt_read_mof("2019-01", "2019-03", 1)
test <- tt_read_mof("2019-01", "2019-03", period = 1)
test
.df <- test
.hscode <- "852580,853110,853120,853180,853190,847010,847021,847029,847030,847090"
"\u5168\u90E8\u7522\u54C1_\u5168\u90E8\u7522\u54C1"
test
load_all()
test %>% tt_bind_industry(indx = c("001", "002"))
tt_bind_industry(test, indx = c("001", "002"))
tt_bind_industry(test, index = c("001", "002"))
tt_bind_industry(test, index = c("001", "002", "200"))
tt_bind_industry(test, index = c("200", "201"))
rpt_country_value(tt_bind_industry(test, index = c("200", "201")))
install()
document()
build()
install()
load_all()
test <- tt_read_mof("2019-01", "2019-05", period = 1)
test
library(tidyverse)
test %>% rpt_country_value()
tt_bind_area()
test %>% rpt_country_value() %>% tt_bind_area()
test %>%  tt_bind_area()
test %>%  tt_bind_area() %>%
test %>%  tt_bind_area() %>% group_by(area, year) %>% summarise(value = sum(value))
test
tmp_tbl <- test
must_hav <- c("country", "year", "value")
tmp_tbl
!all(must_hav %in% names(tmp_tbl))
if (!all(must_hav %in% names(tmp_tbl))) {
stop("Your data MUST contains `country`, `year`, and `value` columns!", call. = FALSE)
}
by = "year"
if (!(by %in% c("year", "month"))) {
stop(paste0("Invalid argument: '", by, "' ; `by` must `year` or `month`!"), call. = FALSE)
}
if (by == "year") {
tmp_tbl <- tidyr::separate(tmp_tbl, year, into = c("year", "month"))
year_var <- sort(unique(tmp_tbl$year))
} else {
year_var <- sort(unique(tmp_tbl$year))
}
tmp_tbl
year_var
tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl
tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl <- tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl
tidyr::spread(tmp_tbl, year, value)
tmp_tbl<- test
must_hav <- c("country", "year", "value")
if (!all(must_hav %in% names(tmp_tbl))) {
stop("Your data MUST contains `country`, `year`, and `value` columns!", call. = FALSE)
}
if (!(by %in% c("year", "month"))) {
stop(paste0("Invalid argument: '", by, "' ; `by` must `year` or `month`!"), call. = FALSE)
}
if (by == "year") {
tmp_tbl <- tidyr::separate(tmp_tbl, year, into = c("year", "month"))
year_var <- sort(unique(tmp_tbl$year))
} else {
year_var <- sort(unique(tmp_tbl$year))
}
tt_bind_area(tmp_tbl)
tmp_tbl
tt_bind_area(tmp_tbl)
tmp_tbl <- tt_bind_area(tmp_tbl)
tibble::as_tibble(aggregate(value ~ area + year, tmp_tbl, FUN = sum))
tmp_tbl
tmp_tbl <- tibble::as_tibble(aggregate(value ~ area + year, tmp_tbl, FUN = sum))
tmp_tbl
# tmp_tbl <- tibble::as_tibble(aggregate(value ~ country + year, tmp_tbl, FUN = sum))
tmp_tbl <- tidyr::spread(tmp_tbl, year, value)
tmp_tbl
tmp_tbl <- dplyr::mutate_if(tmp_tbl, is.numeric, list(~ replace(., is.na(.), 0)))
tmp_tbl <- tmp_tbl[order(tmp_tbl[[(length(year_var) + 1)]], decreasing = TRUE), ]
tmp_tbl
"\u5168\u7403"
tmp_tbl
test
rpt_area_value(test)
rpt_country_value(test)
tt_bind_area(rpt_country_value(test))
library(tidyverse)
rpt_country_value(test) %>%
tt_bind_area() %>%
group_by(area) %>%
summarise_at(vars(`2018`, `2019`), sum)
rpt_country_value(test) %>%
tt_bind_area() %>%
group_by(area) %>%
summarise_at(vars(`2018`, `2019`), sum) %>%
arrange(desc(`2019`))
tmp_tbl
rpt_country_value(test) %>%
tt_bind_area()
rpt_country_value(test) %>%
tt_bind_area() %>%
group_by(area) %>%
summarise_at(vars(`2018`, `2019`), sum) %>%
arrange(desc(`2019`))
tmp_tbl
load_all()
rpt_area_value(test)
rpt_area_value(test, by = "month")
ddocument()
document()
check()
test
test %>% rpt_area_value()
load_all()
rpt_by_industry_1("2019-01", "2019-02", "手工具")
load_all()
rpt_by_industry_1("2019-01", "2019-02", "手工具", "area")
rpt_by_industry_1("2018-01", "2018-12", "手工具", "area")
document()
document()
check()
use_readme_rmd()
sample1 <- tt_read_mof("2019-01", "2019-02")
tt_read_mof
document()
check()
sample2
sample1
# Read this year and last year, set period = 1
sample2 <- tt_read_mof("2019-01", "2019-02", period = 1)
head(sample2)
rpt_area_value
check()
check()
install()
build()
document()
build()
load_all()
tt_ls()
structure
my_Date <- structure(
"my_Date"
class = "Date"
)
my_Date <- structure(
"my_Date",
class = "Date"
)
my_Date
load_all()
tt_ls()
file_format
load_all()
load_all()
load_all()
tt_read_table(tt_get_path("PATH_INDUSTRY"))
tt_read_table(tt_get_path("PATH_AREA"))
tt_read_table("tt")
load_all()
load_all()
tt_read_table(tt_get_path("PATH_AREA"))
load_all()
tt_read_table(tt_get_path("PATH_AREA"))
tt_read_table <- function(path, sheet = NULL) {
if (!file.exists(path) & !stringr::str_detect(path, "^https?://")) stop(sprintf("'%s' does not exist.", path), call. = FALSE)
if (is.null(sheet)) sheet = 1
file_format <- stringr::str_extract(path, "\\.(xlsx|XLSX|tsv|TSV|csv|CSV|feather|FEATHER|xls|XLS|rds|RDS)$")
file_format <- tolower(file_format)
switch(file_format,
# ".csv" = {readr::read_csv(file = path, col_types = readr::cols())},
# ".tsv" = {readr::read_tsv(file = path, col_types = readr::cols())},
".xlsx" = {readxl::read_xlsx(path, sheet = sheet)},
".xls" = {readxl::read_xls(path, sheet = sheet)},
".feather" = {feather::read_feather(path)},
".rds" = {readr::read_rds(path)},
stop("File format not support!", call. = FALSE)
)
}
tt_read_table(tt_get_path("PATH_AREA"))
taitratools::tt_ls()
tt_read_table("//172.26.1.102/dstore/Projects/data/hscode_data/full_hscode11_20191017.tsv")
load_all()
load_all()
readr::read_csv
document()
check()
check()
check()
install()
load_all()
document()
check()
install()
install()
library(purrr)
library(tidyverse)
remove.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
use_tidy_versions()
library(purrr)
library(tidyverse)
remove.packages(tidyverse)
remove.packages("tidyverse")
devtools::install_github("hadley/tidyverse")
install.packages("tidyverse")
