"name_ch",                                         # chinese name
paste0("mof.",         c("name", "code", "area")), # MOF
paste0("itc.",         c("name", "code")),         # ITC
paste0("world_bank.",  c("name", "code", "area")), # WORLD BANK
paste0("imf.",         c("name")),                 # IMF
paste0("oxford.",      c("name")),                 # OXFORD
paste0("un_comtrade.", c("name", "code", "iso")),  # UN COMTRADE
paste0("gta.",         c("name")),                 # GTA
paste0("itc_tariff.",  c("name")),                 # ITC TARIFF
paste0("asean.",       c("name", "code")),         # ASEAN
"name_ch2"                                         # same as name_ch
)
names(.country_ref_list) <- name_var
.mof_export_usd_sample_data <- tt_vroom_mof("2019-01", "2019-02", period = 3, dep_month_cols = TRUE)
# save data ------------------------------------
save(
.tt_source_path, .industry_tbl, .industry_tbl_en,
.tt_ind21_tbl, .tt_ind21_tbl_en, .tt_ind21_list,
.tt_ind_verion_1_tbl_en, .tt_ind_list_verion_1,
.tt_ind_verion_2_tbl_en, .tt_ind_list_verion_2,
.full_hscode_tbl, .area_tbl, .country_ref_list,
.mof_export_usd_sample_data,
file = "R/sysdata.rda", compress='xz')
}
getsourcepath()
tt_update_data()
load_all()
install()
ind21 = FALSE
reports = NULL
ind21
stopifnot(!ind21 && is.null(reports))
!ind21
is.null(reports)
ind21 <- TRUE
!ind21
stopifnot(!ind21 && is.null(reports))
stopifnot(!(ind21 & is.null(reports)))
stopifnot(!(ind21 & !is.null(reports)))
is.null(reports)
is.null(reports)
reports <- "version1"
is.null(reports)
stopifnot(is.null(reports))
is.null(reports)
is.null(reports) & ind21
ind21
stopifnot(is.null(reports) & ind21)
ind21 = FALSE
stopifnot(is.null(reports) & ind21)
ind21
is.null(reports) & ind21
stopifnot(is.null(reports) && ind21)
xor(is.null(reports), ind21)
stopifnot(!(ind21 & !is.null(reports)))
ind21
reports
ind21 <- TRUE
stopifnot(!(ind21 & !is.null(reports)))
reports = NULL
stopifnot(!(ind21 & !is.null(reports)))
ind21
ind21 <- FALSE
stopifnot(!(ind21 & !is.null(reports)))
ind21
ifelse
else if
is.null(reports)
reports
reports
reports <- "version1"
stopifnot(reports %in% c("version1", "version2"))
reports <- "version3"
stopifnot(reports %in% c("version1", "version2"))
reports <- "version1"
tmp_tbl <- .industry_tbl_en
load_all()
tmp_tbl <- .industry_tbl_en
.tt_ind_list_verion_1
tmp_tbl[tmp_tbl[["index"]] %in% .tt_ind_list_verion_1, ]
load_all()
industry_order_tbl
.tt_ind_list_verion_1
test_data
test_data <- .mof_export_usd_sample_data
test_data
test_data %>%
tt_bind_industry(ind21 = TRUE, reports = "version2")
test_data %>%
tt_bind_industry(reports = "version2")
document()
load_all()
library(tidyverse)
test_data <- .mof_export_usd_sample_data
test_data_ind
test_data_ind
test_data
tt_bind_industry
test_data_ind <- test_data %>%
tt_bind_industry(reports = "version2", col_more = TRUE) %>%
group_by(industry, country, year) %>%
summarise(value = sum(value))
test_data_ind
test_data %>%
tt_bind_industry(reports = "version2", col_more = TRUE)
test_data_ind <- test_data %>%
tt_bind_industry(reports = "version2", col_more = TRUE) %>%
group_by(type, major, minor, industry, country, year) %>%
summarise(value = sum(value))
test_data_ind
test_data_ind <- test_data_ind %>% ungroup()
test_data_ind
test_data_ind %>%
mutate(name = report_industry_name(major, minor))
test_data_ind %>%
mutate(name = report_industry_name(major, minor)) %>% View
test_data_ind %>%
mutate(industry = report_industry_name(major, minor))
#' convert report_industry_name
#'
#' @param major string
#' @param minor string
#'
#' @return string
#' @export
tt_convert_industry_name <- function(major, minor) {
fixed_name <- function(name) stringr::str_replace(name, "^\\d{2}_", "")
dplyr::if_else(stringr::str_detect(minor, "全部產品"), fixed_name(major), fixed_name(minor))
}
load_all()
load_all()
document()
load_all()
test_data_ind %>%
mutate(industry = report_industry_name(major, minor))
library(tidyverse)
test_data <- .mof_export_usd_sample_data
test_data_ind <- test_data %>%
tt_bind_industry(reports = "version2", col_more = TRUE) %>%
group_by(type, major, minor, industry, country, year) %>%
summarise(value = sum(value)) %>% ungroup()
test_data_ind %>%
mutate(industry = tt_convert_industry_name(major, minor))
test_data_ind %>%
mutate(industry = tt_convert_industry_name(major, minor)) %>%
select(-type, -major, -minor) %>%
spread(year, value)
test_data_ind %>%
mutate(industry = tt_convert_industry_name(major, minor)) %>%
select(-type, -major, -minor) %>%
spread(year, value) %>%
arrange(desc(`2019`))
test_data_ind %>%
mutate(industry = tt_convert_industry_name(major, minor)) %>%
select(-type, -major, -minor) %>%
spread(year, value) %>%
arrange(desc(`2019`)) %>% .[["country"]] %>% unique()
packages(taitratools)
?taitratools
package_info(taitratools)
packageVersion("taitratools")
library(help = "taitratools")
library("taitratools")
install()
test_data_ind
test_data_ind %>%
mutate(industry = tt_convert_industry_name(major, minor))
taitratools:::..tt_ind_list_verion_1
taitratools:::.tt_ind_list_verion_1
taitratools:::.tt_ind_verion_1_tbl_en
arrange(taitratools:::.tt_ind_verion_1_tbl_en)
arrange(taitratools:::.tt_ind_verion_1_tbl_en, reports_version_1_order)
arrange(taitratools:::.tt_ind_verion_1_tbl_en, reports_version_1_order)
arrange
arrange
order_tbl <- dplyr::arrange(taitratools:::.tt_ind_verion_1_tbl_en, reports_version_1_order)
dplyr::arrange(taitratools:::.tt_ind_verion_1_tbl_en, reports_version_1_order)
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)
load_all()
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)
industry_list
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
industry_list
test_data_ind %>% arrange(map_dbl(.$industry, ~ which(.x == industry_list)))
test_data_ind
industry_list
test_data_ind %>% arrange(map_dbl(.$industry, ~ which(. == industry_list)))
industry_list
test_data_ind$industry
test_data_ind
split(test_data_ind$country)
split(test_data_ind, test_data_ind$country)
split(test_data_ind, test_data_ind$country)[1]
split(test_data_ind, test_data_ind$country)[[2]]
split(test_data_ind, test_data_ind$country)[[3]]
split(test_data_ind, test_data_ind$country)[[10]]
split(test_data_ind, test_data_ind$country)[[100]]
split(test_data_ind, test_data_ind$country)[[100]] %>% spread(year, value)
df <- split(test_data_ind, test_data_ind$country)[[100]] %>% spread(year, value)
map_dbl(df$industry, ~ which(.x == industry_list))
df$industry
industry_list
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
map_dbl(df$industry, ~ which(.x == industry_list))
df %>%
arrange(map_dbl(.$industry, ~ which(.x == industry_list)))
map_dbl
tt_order_by_industry_for_reports <- function(df) {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
dplyr::arrange(df, purrr::map_dbl(.$industry, ~ which(.x == industry_list)))
}
test_data_ind %>%
mutate(industry = tt_convert_industry_name(major, minor)) %>%
select(-type, -major, -minor) %>%
spread(year, value) %>%
arrange(desc(`2019`))
test_data_ind %>%
select(-type, -major, -minor) %>%
spread(year, value) %>%
arrange(desc(`2019`))
test_data_ind %>%
select(-type, -major, -minor) %>%
spread(year, value) %>%
arrange(desc(`2019`)) %>%
split(.$country)
test_data_ind %>%
select(-type, -major, -minor) %>%
spread(year, value) %>%
arrange(desc(`2019`)) %>%
split(.$country) %>%
map(tt_order_by_industry_for_reports)
tt_order_by_industry_for_reports <- function(df) {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
dplyr::arrange(df, purrr::map_dbl(.$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df)
tt_order_by_industry_for_reports <- function(df) {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df)
test_data_ind %>%
select(-type, -major, -minor) %>%
spread(year, value) %>%
arrange(desc(`2019`)) %>%
split(.$country) %>%
map(tt_order_by_industry_for_reports)
tt_order_by_industry_for_reports <- function(df, vesion) {
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else if {
stop("Version type not correct!", call. = FALSE)
}
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports <- function(df, vesion) {
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else if {
stop("Version type not correct!", call. = FALSE)
}
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports <- function(df, vesion) {
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else {
stop("Version type not correct!", call. = FALSE)
}
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df)
tt_order_by_industry_for_reports <- function(df, version) {
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else {
stop("Version type not correct!", call. = FALSE)
}
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df)
tt_order_by_industry_for_reports <- function(df, version) {
stopifnot(!is.null(version))
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else {
stop("Version type not correct!", call. = FALSE)
}
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df)
tt_order_by_industry_for_reports <- function(df, version = NULL) {
stopifnot(!is.null(version))
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else {
stop("Version type not correct!", call. = FALSE)
}
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df)
tt_order_by_industry_for_reports(df, "version2")
tt_order_by_industry_for_reports(df, "version1")
tt_order_by_industry_for_reports(df, "version2")
industry_list
df
tt_order_by_industry_for_reports <- function(df, version = NULL) {
stopifnot(!is.null(version))
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else {
stop("Version type not correct!", call. = FALSE)
}
stopifnot(nrow(industry_list) == nrow(df))
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df, "version2")
tt_order_by_industry_for_reports(df, "version1")
nrow(industry_list)
industry_list
length(industry_list)
nrow(df)
df
industry_list
length(industry_list)
nrow(df)
df
stopifnot(length(industry_list) == nrow(df))
length
industry_list
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
tt_order_by_industry_for_reports <- function(df, version = NULL) {
stopifnot(!is.null(version))
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else {
stop("Version type not correct!", call. = FALSE)
}
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df, "version1")
df
df$industry
industry_list %in% df$industry
df$industry %in% industry_list
all(df$industry %in% industry_list)
stopifnot(!all(df$industry %in% industry_list))
stopifnot(all(df$industry %in% industry_list))
tt_order_by_industry_for_reports <- function(df, version = NULL) {
stopifnot(!is.null(version))
if (version == "version1") {
industry_list <- dplyr::arrange(.tt_ind_verion_1_tbl_en, reports_version_1_order)$industry
} else if (version == "version2") {
industry_list <- dplyr::arrange(.tt_ind_verion_2_tbl_en, reports_version_2_order)$industry
} else {
stop("Version type not correct!", call. = FALSE)
}
stopifnot(all(df$industry %in% industry_list))
dplyr::arrange(df, purrr::map_dbl(df$industry, ~ which(.x == industry_list)))
}
tt_order_by_industry_for_reports(df, "version1")
tt_order_by_industry_for_reports(df, "version2")
ddocument()
document()
check()
install()
build()
ls("package:taitratools")
library(taitratools)
ls("package:taitratools")
# Convert "year" to date. ex> "2019" ==> "2019-01-01"
#' @export
y2date <- function(.date_var, tf = "%Y-%m-%d") {
as.Date(paste0(.date_var, "-01-01"), df)
}
y2date("2019")
# Convert "year" to date. ex> "2019" ==> "2019-01-01"
#' @export
y2date <- function(.date_var, tf = "%Y-%m-%d") {
as.Date(paste0(.date_var, "-01-01"), tf)
}
y2date("2019")
y2date("2019", "%Y")
as.Date
# Convert "year" to date. ex> "2019" ==> "2019-01-01"
#' @export
y2date <- function(.date_var, tf = "%Y-%m-%d") {
tmp_date <- as.Date(paste0(.date_var, "-01-01"), "%Y-%m-%d")
format(tmp_date, tf)
}
ym2date("2019-01")
ym2date("2019-01", "%Y")
format
ym2date
load_all()
# Convert "year" to date. ex> "2019" ==> "2019-01-01"
#' @export
y2date <- function(.date_var, tf = "%Y-%m-%d") {
tmp_date <- as.Date(paste0(.date_var, "-01-01"), "%Y-%m-%d")
format(tmp_date, tf)
}
# Convert "year-month" to date. ex> "2019-01" ==> "2019-01-01"
#' @export
ym2date <- function(.date_var, tf = "%Y-%m-%d") {
tmp_date <- as.Date(paste0(.date_var, "-01"), "%Y-%m-%d")
format(tmp_date, tf)
}
ym2date
ym2date("2019-01")
ym2date("2019-01", "%Y")
install()
build()
install()
build()
period_year
load_all()
period_year
start_date("2019-01", "2015-01")
period_year("2019-01", "2015-01")
seq(ym2date("2019-01"), ym2date("2015-01"), by = "year")
ym2date("2019-01")
ym2date("2015-01")
seq
seq(ym2date("2019-01"), ym2date("2015-01"), by = "month")
load_all()
# TODO Adding some common
getsourcepath <- function() {
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
save(.tt_source_path, file = "R/sysdata.rda", compress='xz')
}
tt_update_data <- function() {
# tt_source_path data -------------------------
tmp_path <- readxl::read_xlsx("inst/extdata/tt_source_path.xlsx")
.tt_source_path <- as.list(tmp_path$path)
names(.tt_source_path) <- tmp_path$name
# industry data -----------------------------
.industry_tbl <- tt_read_table(tt_get_path("PATH_INDUSTRY"))
.industry_tbl_en <- rlang::set_names(.industry_tbl, c("index", "type", "major", "minor", "hscode6", "hscode11", "hscode_dights",
"hscode", "industry", "reports_version_1", "reports_version_1_order", "reports_version_2",
"reports_version_2_order", "reports_version_industry21", "reports_version_industry21_order"))
# industry21 data -----------------------------
.tt_ind21_list <- .industry_tbl[.industry_tbl[["reports_version_industry21"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind21_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind21_list, ][c("\u7DE8\u865F", "industry", "reports_version_industry21_order")]
.tt_ind21_tbl_en <- .industry_tbl_en[.industry_tbl_en[["index"]] %in% .tt_ind21_list, ][c("index", "industry", "reports_version_industry21_order")]
# industry version 1 data -----------------------------
.tt_ind_list_verion_1 <- .industry_tbl[.industry_tbl[["reports_version_1"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind_verion_1_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind_list_verion_1, ][c("\u7DE8\u865F", "industry", "reports_version_1_order")]
.tt_ind_verion_1_tbl_en <- .industry_tbl_en[.industry_tbl_en[["index"]] %in% .tt_ind_list_verion_1, ][c("index", "industry", "reports_version_1_order")]
# industry version 2 data -----------------------------
.tt_ind_list_verion_2 <- .industry_tbl[.industry_tbl[["reports_version_2"]] == 1, ][["\u7DE8\u865F"]]
.tt_ind_verion_2_tbl <- .industry_tbl[.industry_tbl[["\u7DE8\u865F"]] %in% .tt_ind_list_verion_2, ][c("\u7DE8\u865F", "industry", "reports_version_2_order")]
.tt_ind_verion_2_tbl_en <- .industry_tbl_en[.industry_tbl_en[["index"]] %in% .tt_ind_list_verion_2, ][c("index", "industry", "reports_version_2_order")]
# full hsocde data -----------------------------
.full_hscode_tbl <- tt_read_table(tt_get_path("PATH_FULL_HSCODE"))
tmp <- lapply(list(1:2, 3:4, 5:6, 7:8, 9:10), function(x) {
tmp <- unique(.full_hscode_tbl[x])
names(tmp) <- c("hscode", "hscode_cn")
tmp
})
.full_hscode_tbl <- Reduce(rbind, tmp)
# area data -------------------------------------
.area_tbl <- tt_read_table(tt_get_path("PATH_AREA"))
.area_tbl[.area_tbl$areaName == "全球", ][["countryName"]] <- "[\\w\\W]+"
# country name data -----------------------------
.country_ref_list <- readxl::read_xlsx("//172.26.1.102/dstore/重要資料/國家中英文對照.xlsx", skip = 1)
name_var <- c(
"name_ch",                                         # chinese name
paste0("mof.",         c("name", "code", "area")), # MOF
paste0("itc.",         c("name", "code")),         # ITC
paste0("world_bank.",  c("name", "code", "area")), # WORLD BANK
paste0("imf.",         c("name")),                 # IMF
paste0("oxford.",      c("name")),                 # OXFORD
paste0("un_comtrade.", c("name", "code", "iso")),  # UN COMTRADE
paste0("gta.",         c("name")),                 # GTA
paste0("itc_tariff.",  c("name")),                 # ITC TARIFF
paste0("asean.",       c("name", "code")),         # ASEAN
"name_ch2"                                         # same as name_ch
)
names(.country_ref_list) <- name_var
.mof_export_usd_sample_data <- tt_vroom_mof("2019-01", "2019-02", period = 3, dep_month_cols = TRUE)
# save data ------------------------------------
save(
.tt_source_path, .industry_tbl, .industry_tbl_en,
.tt_ind21_tbl, .tt_ind21_tbl_en, .tt_ind21_list,
.tt_ind_verion_1_tbl_en, .tt_ind_list_verion_1,
.tt_ind_verion_2_tbl_en, .tt_ind_list_verion_2,
.full_hscode_tbl, .area_tbl, .country_ref_list,
.mof_export_usd_sample_data,
file = "R/sysdata.rda", compress='xz')
}
getsourcepath()
tt_update_data()
install()
build()
